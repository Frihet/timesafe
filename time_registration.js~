
var billableId = 30;

var subdivTags=[
		{'id':0, 'name':'Div4A'},
		{'id':1, 'name':'Div4B'},
		{'id':2, 'name':'Div4C'},
		{'id':3, 'name':'Div4D'},
		{'id':4, 'name':'Div4E'},
		{'id':5, 'name':'Div4F'},
		{'id':6, 'name':'Div4G'}
		];


var divTags=[
		{'id':10, 'name':'Div1'},
		{'id':11, 'name':'Div2'},
		{'id':12, 'name':'Div3'},
		{'id':13, 'name':'Div4'},
		{'id':14, 'name':'Div5'},
		{'id':15, 'name':'Div6'},
		{'id':16, 'name':'Div7'}
		];

var projectTags={
		'0':[
{'id':1000, 'name':'Premises'},
{'id':1001, 'name':'Board meeting'},
{'id':1002, 'name':'Board secretary'},
{'id':1003, 'name':'Strategy'},
{'id':1004, 'name':'Security'},
{'id':1005, 'name':'Div3 - Treasury manager'},
{'id':1006, 'name':'Div1 - Organisation manager'},
{'id':1007, 'name':'Div5 - Quality management'},
{'id':1008, 'name':'Div2 - Marketing management'},
{'id':1009, 'name':'Div2 - Sales management'},
{'id':1010, 'name':'Control VSS, VSD, profit, C/B and VAR'},
{'id':1011, 'name':'Finance & estates'},
{'id':1012, 'name':'COO'},
{'id':1013, 'name':'CEO'},
{'id':1014, 'name':'CAO'},
{'id':1015, 'name':'CIdO'},
{'id':1016, 'name':'Monthly Board reports'},
{'id':1017, 'name':'EC'},
{'id':1018, 'name':'AC'},
{'id':1019, 'name':'Legal'},
{'id':1020, 'name':'FCB'},
				],
		'1':[
{'id':1100, 'name':'Staff meeting'},
				],
		'2':[
{'id':1200, 'name':'Sales'},
				],
		'3':[
{'id':1300, 'name':'Finance'},
				],
		'4':[
{'id':1400, 'name':'DC meeting'},
				],
		'5':[
{'id':1500, 'name':'ISO 9000'},
				],
		'6':[
{'id':1600, 'name':'Website'},
				],
		'7':[
{'id':1700, 'name':'Time registry'},
				],
		'8':[
{'id':1800, 'name':''},
				],
		'9':[
{'id':1900, 'name':'Phase 2009.02'},
{'id':1901, 'name':'Phase 2009.05'},
{'id':1902, 'name':'Phase 2009.07'},
				],
		'10':[
{'id':2000, 'name':'Phase 2009.03'},
{'id':2001, 'name':'Phase 2009.04'},
{'id':2002, 'name':'Phase 2009.06'},
				],
		'11':[
{'id':2100, 'name':'Phase 2009.05'},
{'id':2101, 'name':'Phase 2009.08'},
{'id':2102, 'name':'Phase 2009.11'},
				],
		'12':[
{'id':2200, 'name':'Messaging component'},
				],
		'13':[
				],
		'14':[
{'id':2400, 'name':'Phase 2009.02'},
{'id':2401, 'name':'Phase 2009.06'},
{'id':2402, 'name':'Phase 2009.12'},
				],
		'15':[
{'id':2500, 'name':'Phase 2009.06'},
{'id':2501, 'name':'Phase 2009.09'},
				],
		'16':[
{'id':2600, 'name':'CMDB'},
				],
		'17':[
{'id':2700, 'name':'Phone support'},
				],
		'18':[
{'id':2800, 'name':'Phase 2009.05'},
{'id':2801, 'name':'Phase 2009.07'},
{'id':2802, 'name':'Phase 2009.09'},
{'id':2803, 'name':'Phase 2009.11'},
				]
};

var commonTags = [
		];

var overtimeTags = [
		{'id':25, 'name':'40 % overtime'},
		{'id':26, 'name':'100 % overtime'},
		];

var externalTags = [
		{'id':30, 'name':'Billable'},
		{'id':20, 'name':'Travel'},
		{'id':21, 'name':'Meeting'},
		];

		
		
function isBillable()
{
		var tag = $('tags');
		for(var i=0; i<tag.options.length; i++) {
				opt = tag.options[i];
				if (opt.selected && opt.value==billableId) {
						return true;
				}
		}
		return false;
}

function hasSubdivision()
{
		
}

function notifyClear()
{
		var notification = $('notification');
		notification.innerHTML ="";;
}

function notify(msg)
{
		var notification = $('notification');
		notification.innerHTML += "<div class='error'>" + msg + "</div>";
}

function addOptions(select, optionArr) {
		for( var i=0; i<optionArr.length; i++) {
				var opt = optionArr[i];
				select.add(new Option(opt.name, opt.id), null);
		}
}

function isInternal(projectId)
{
		return projectId <= 8;
}

function isProject(projectId)
{
		return projectId >6;
}

function makeTagSelect(project){
		var tags = $('tags');
		while(tags.length > 0) {
				tags.remove(0);
		}

		addOptions(tags,commonTags);
		addOptions(tags,overtimeTags);

		if (!isInternal(project.value)) {
				addOptions(tags,externalTags);
		}
		
		if (isProject(project.value)) {
				addOptions(tags,subdivTags);
		}
		addOptions(tags,projectTags[project.value]);
}

function countTags(checkTags) {
		var allTags = $('tags');
		var res = 0;
		
		for (var i=0; i<checkTags.length; i++) {
				for (var j=0; j<allTags.length; j++) {
						var opt = allTags.options[j];
						if (opt.selected && opt.value == checkTags[i].id) {
								res +=1;
						}
				}
		}
		
		return res;
}

String.prototype.stripHTML = function () {
		return this.replace(/<[^>]*>/g, "");
}
		
String.prototype.trim = function() {
		return this.replace(/^\s+|\s+$/g,"");
}

function parseFloatNazi(str) 
{
		var str2 = str.replace(/,/g,'.');
		if (str2.match(/^[0-9]*\.?[0-9]+$/))
				return parseFloat(str2);
		return NaN;
}


function validate()
{
		notifyClear();
		var time = $('time');
		var billable = isBillable();
		var time_val = parseFloatNazi(time.value);
		var description = $('description');
		
		var project = $('project');
		if (isNaN(time_val)) {
				notify("Time spent is not a number");
		} else { 
				if (billable && (2*time_val) != parseFloat(parseInt(2*time_val))) 
						notify('Time spent is not an even half hour');
				if (time_val > 20) {
						notify('Unreasonably many hours in one day');
				}
		}
		
		if (isProject(project.value) && (countTags(subdivTags) != 1)) {
				notify('Choose exactly one subdivision tag');
		}

		if (countTags(overtimeTags) > 1) {
				notify('Multiple overtime types chosen');
		}

		if(!isInternal(project.value) && !billable) 
		{
				notify('External work is usually billable');
		}

		if (description) 
		{
				var description_value = tinyMCE.get('description').getContent()
		
						if(description_value.stripHTML().trim()=='') 
						{
								
								notify('No description of work given');
						}
		}
		
		
}
